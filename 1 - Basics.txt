LESSON 1 - BASICS

    A. Bitcoin allowed peer to peer transactions on a decentralized network and offered a superior store of value (gold)
        created by Satoshi Nakamoto
        built on cryptography and decentralization
        scarce amount
        Bitcoin whitepaper: https://bitcoin.org/bitcoin.pdf
        Blockchain: https://www.investopedia.com/terms/b/blockchain.asp

    B. Building on this technology, Ethereum was created allowing for more interaction, through 'smart contracts'
        created by Vitalik Buterin
        Ethereum whitepaper: https://ethereum.org/en/whitepaper/
        *Nick Szabo originally created smart contracts in 1994
        'smart contracts' - set of instructions executed in a decentralized way without the need for a centralized party
            they exist and are executed on blockchains, as opposed to between centralized authorities
        Ethereum = store of value + smart contracts

    C. The Oracle Problem - blockchains cannot interact with real world data; blockchains are deterministic systems
        Blockchain Oracles - device that interacts with the off-chain world to provide external data or computation to smart contracts
            https://betterprogramming.pub/what-is-a-blockchain-oracle-f5ccab8dbd72 
            we cannot have a single centralized Oracle system, we need an Oracle Network that is also decentralized
                on-chain logic, yes is decentralized, but we also need our off-chain data computation to also be decentralized
                    this results in Hybrid Smart Contracts (on-chain + off-chain agreements)
                        https://blog.chain.link/hybrid-smart-contracts-explained/ 
                        Ex. Chainlink - the most popular Decentralized Oracle Network and it blockchain agnostic
                            https://www.youtube.com/watch?v=tIUHQ7sDoaU&ab_channel=Chainlink

    Terminology: https://connect.comptia.org/content/articles/blockchain-terminology

    D. 
    Web1 - permissionless open sourced web with static content; read
        Web2 - permissioned web, with dynamic content, where companies (centralized) run your agreements on their servers; read + write
            Web3 - permissionless web, with dynamic content, where decentralized censorship resistant networks run your agreement and code.  User-owned ecosystems; read + write + ownership

    E. What is the value of smart contracts?  What problems do they solve?
        they create Trusted Minimized Agreements (unbreakable promises)
            the world is run on agreements; promises
        it is an agreement, contract, or set of instructions that are deployed on a decentralized blockchain
            they are immutable (+secure), decentralized, and transparent
            move from paper (brand-based) guarantees to cryptographic (math-based) guarantees
        examples:
            DeFi - gives the ability of users to engage with finance without having to go through a centralized intermediary
                https://chain.link/education/defi
                https://medium.com/the-capital/why-defi-1519cc4d4bd3
            DAO (Decentralized Autonomous Organization) - group governed by a transparent set of rules defined within a smart contract
                https://betterprogramming.pub/what-is-a-dao-what-is-the-architecture-of-a-dao-how-to-build-a-dao-high-level-d096a97162cc
            NFT - unique assets
    
    F. 
        Metamask - https://metamask.io/
        Etherscan - block explorer for Ethereum
            https://etherscan.io/
        Accounts:
            each account has a unique Public key and Private key
                *Private key gives you full access to that given account
                https://www.coinbase.com/learn/crypto-basics/what-is-a-private-key
            Secret Recovery Phase - key that gives you access to all accounts within your wallet
                allows us to create 1+ accounts
                https://metamask.zendesk.com/hc/en-us/articles/360060826432-What-is-a-Secret-Recovery-Phrase-and-how-to-keep-your-crypto-wallet-secure
        Networks - we have the 'Ethereum Mainnet' where actual transactions live
            then we have additional test networks (e.g. Rinkeby) that allow us to test transactions using fake money
                https://rinkeby.etherscan.io/
                Faucets are used to send "fake" ethereum money to our wallets on a given test networks (e.g. Rinkeby)
                    https://faucets.chain.link
    
    G.
        Gas
            https://ethereum.org/en/developers/docs/gas/
            If we view a transaction on etherscan.io, we see a couple things including:
                Transaction Fee - blockchain is being run by all of these 'nodes', and these nodes are paid incentives for performing transactions
                Gas Price - price for one unit of gas
                    gas is a unit of computational measure
                    the more complex your transaction is or the more people sending transactions, the more gas you will have to pay
                    *priced in Gwei - 1 Ether = 10^9 Gwei = 10^18 Wei; easier ways of understanding smaller amounts of Ether
                    Gas Limit - we require gas for a transaction to take place
                        *we can specify that amount of gas supplied for a given transaction
                    Gas Fees:
                        Base - min Gas Price to send to complete transaction
                        Max - ...
                        Max Priority - max + amount willing to give as tip to miners
                    Burnt - some gas gets permanently burnt forever
                    (typically) Transaction Fee = Gas Usage * Gas Price
            The more people sending transactions at the same time, the more expensive gas prices are
            When we send a transaction, we will have to wait for the transaction to process
            https://eth-converter.com/
            https://ethgasstation.info/
        Ethereum Improvement Proposal (EIP)
            https://www.youtube.com/watch?v=MGemhK9t44Q&ab_channel=Finematics
            mechanism of proposing changes to the Ethereum network
            document covering technical details and rational behind a change
            EIP 1559 - certain proposal that has great implications when it comes to monetary and client apps (e.g. wallets)
                current ethereum price model - 'First-Price Auction'
                    users who want transactions picked up by miners have to bid their space in a block; they do this by submitting a gas price (price willing to pay for a given transaction)
                    miners are incentivized to pick up transactions and sorting them by the highest gas prices
                    this results in users paying very high gas prices
                    inexperienced users may also find themselves waiting a long time for a transaction to complete if they dont know what the gas price should be
                EIP 1559
                    aims to solve problems with the First-Price Auction approach
                    proposed changes:
                        Base Fee - min fee that must be paid by a transaction to be included in a block; set per block and can be inc/dec depending on how congested the network is
                        increase in network capacity by changing the max gas limit per block from 12.5M (current) to 25M gas; doubling block size
                        Miner Tip - separate fee paid directly to miner to incentive them to prioritize the transaction
                    impact of changes:
                        when the network is > 50% utilization, base fee inc; when network is < 50% utilization, base fee dec
                            this results in the network aiming for equillibrium (50%)
                
    H.
        How do blockchains work?
            https://ethereum.org/en/developers/docs/intro-to-ethereum/
            Hash - unique, fixed length string meant to identify a piece of data.  They are created by inputting said data into a 'hash function' (e.g. SHA256)
                Hash Function - a function that computes data into a unique hash value
                https://andersbrownworth.com/blockchain/hash
                https://techjury.net/blog/what-is-cryptographic-hash/
            Block - data and state storage
                we now introduce more inputs (Block number, Nonce, Data/Tx)
                Mining - the process of finding the solution to a blockchain problem (e.g. finding a hash value that starts with four 0's)
                Special computers (Nodes) get paid for solving these problems or 'mining' blocks
                    Nodes - computer running this blockchain technology
                Nonce - number used to find the solution to the blockchain problem
                    *in Ethereum, it is also used to define the transaction number for an account/address
                    https://andersbrownworth.com/blockchain/block
            Blockchain - public database updated and shared across many computers in a network
                'chain' refers to one or more blocks cryptographically related by referencing its parent block
                    this is where we introduce another input called 'Previous' (points to previous hash of the last block)
                *data in a give block cannot be changed without changing all subsequest blocks .. this would also require consensus of the entire blockchain distributed network
                https://andersbrownworth.com/blockchain/blockchain
                *Genesis Block - is the very first block in a blockchain; Previous value is all 0's     
            Distributed Blockchain - introduce decentralized, peer-to-peer blockchains; many nodes that are running/interacting the exact same blockchain
                https://andersbrownworth.com/blockchain/distributed
                every node in the network must agree upon each new block and the chain as a whole; nodes store lists of every transaction that takes place
                    nodes ensure that everyone interacting with the blockchain have the same data
                    to accomplish this distributed agreement on state, blockchains need a 'consensus' mechanism
                        consensus can be broken down into:
                            A. Chain selection - figuring out which blockchain is the "right" one   
                                *use the Nakamoto Consensus rule - says that we use the blockchain with the most blocks; Longest Chain Blockchain
                            B. Sybil Resistance - way that avoids the creation of many nodes to gain incentives (e.g. advanced computation)
                        Sybil Resistance options: (*Nakamoto Consensus = Proof-of-work + Chain selection)
                            1. Proof-of-work - single node (author) completes advanced computation to complete a blockchain problem; mining
                                https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/
                                nodes are competing against one another to complete the blockchain problem  
                                    *miners are attempting to find the nonce for a block; once found, the block will be added to the chain
                                first node to complete the problem will gain the transaction fee
                                    *miners also get paid from this Block Reward, in addition to the transaction fee
                                *requires a lot of energy
                                Block Time - amount of time for a block to be published
                                Block Confirmations - number of additional blocks added on after our transaction completed
                            2. Proof-of-stake - nodes put up collateral as a Sybil Resistance mechanism
                                https://ethereum.org/en/developers/docs/consensus-mechanisms/pos/
                                miners are called 'Validators'; they just validate other nodes
                                nodes are randomly chosen to complete the block, and then validators validate
                                    *compared to in PoW where every miner is eager complete the block
                                    *randomness is important. Blockchains are deterministic systems so having random numbers doesnt make sense. (e.g.) Randomness is determined using RamDAO; org that determines this number
                                *uses way less energy
                                *Eth2.0 will use PoS
                                    *Eth2.0 will also introduce 'Sharding', a solution to the blockchain scalability problem
                                        with limited block space and number of transactions, when many people want to use the blockchain, gas prices skyrocket .. this isnt scalable
                                        Sharding - a blockchain of blockchains; one main blockchain will coordinate many other blockchains, essentially inc block space and the number of transactions
                
            Tokens - we have the same setup as before but now instead of having a 'Data' section, we have a 'Transaction' (Tx) section
                https://andersbrownworth.com/blockchain/tokens 
                Tx shows all transactions in each block
            Public/Private Keys
                how do we know that, in fact, personX made a transaction to personY?  This is where we introduce 'public/private keys' and 'signing'
                Private Key - used to 'sign' transactions
                    *should only be known by the key holder
                Public Key - key holder's public representation
                    *created from your private key using the Elliptic Curve Digital Signature algorithm
                    *our account public address is some derivitive of our public and private keys inputted in an algorithm
                        *Private Key > Public Key > Pulic Address
                https://andersbrownworth.com/blockchain/public-private-keys/keys
            Signing
                you can 'sign' some given data using your private key which would output a 'signature' string value  
                    no one can take that message signature a reverse engineer it to get your private key
                    however, using your public key, you can 'verify' that that signature (and initial data) is in fact yours
                https://andersbrownworth.com/blockchain/public-private-keys/signatures
            Signing Transactions   
                same idea but now instead of some data, we can sign a transaction (from public address X to public address Y)
                and then any public entity can verify the transaction using your public key
                https://andersbrownworth.com/blockchain/public-private-keys/transaction
        
   

     
